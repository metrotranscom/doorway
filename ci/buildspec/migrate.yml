# AWS CodeBuild config
# This file is referenced in the infra repo as a CodeBuild buildspec target.

## The environment variables in this file are passed in through the buildbuild resource.
## Check the terraform scripts to see where these variables originate from.

version: 0.2
env:
  shell: bash

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region "${ECR_REGION}" | docker login --username AWS --password-stdin "${ECR_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"
  build:
    commands:
      - export ECR_REPO="${ECR_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_NAMESPACE}"
      #FIXME: switch back to migration image once we have migrations to run
      - export MIGRATION_IMAGE="${ECR_REPO}/backend:migrate-candidate"
      #- export MIGRATION_IMAGE="${ECR_REPO}/backend:migrate-${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"
      - export PGUSER=$(aws secretsmanager get-secret-value --secret-id ${DB_CREDS_ARN}|jq ."SecretString"|jq -r|jq -r ."username")
      - export PGPASSWORD=$(aws secretsmanager get-secret-value --secret-id ${DB_CREDS_ARN}|jq ."SecretString"|jq -r|jq -r  ."password")
      - export PGPORT=$(aws secretsmanager get-secret-value --secret-id ${DB_CREDS_ARN}|jq ."SecretString"|jq -r|jq -r ."port")
      - export PGHOST=$(aws secretsmanager get-secret-value --secret-id ${DB_CREDS_ARN}|jq ."SecretString"|jq -r|jq -r  ."host")
      - export PGDATABASE=$(aws secretsmanager get-secret-value --secret-id ${DB_CREDS_ARN}|jq ."SecretString"|jq -r|jq -r ."dbname")

      # Pull down migration candidate image
      - docker pull "${MIGRATION_IMAGE}"

      # Default to db:migration:run
      - export MIGRATION_CMD="${MIGRATION_CMD:-db:migration:run}"
      - export DATABASE_URL="postgres://${PGUSER}:${PGPASSWORD}@${PGHOST}:5432/${PGDATABASE}"

      # Execute migration
      # Note that many of these vars are required by the app but not used for migration
      - >
        docker run
        --env PGUSER="${PGUSER}"
        --env PGPASSWORD="${PGPASSWORD}"
        --env PGHOST="${PGHOST}"
        --env PGDATABASE=template1
        --env PGPORT="${PGPORT}"
        --env DATABASE_URL=${DATABASE_URL}
        --env CLOUDINARY_CLOUD_NAME="${CLOUDINARY_CLOUD_NAME}"
        --env LISTINGS_QUERY="${LISTINGS_QUERY}"
        --env FILE_SERVICE="${FILE_SERVICE:-cloudinary}"
        --env PORT="${PORT:-3100}"
        --env EMAIL_API_KEY="${EMAIL_API_KEY:-SG.dummy_value}"
        --env APP_SECRET="${APP_SECRET:-dummy-value-that-is-at-least-16-character-long}"
        --env CLOUDINARY_SECRET="${CLOUDINARY_SECRET:-dummy_secret}"
        --env CLOUDINARY_KEY="${CLOUDINARY_KEY:-dummy_key}"
        --env PARTNERS_BASE_URL="${PARTNERS_BASE_URL:-http://localhost:3001/not-used}"
        --env PARTNERS_PORTAL_URL="${PARTNERS_PORTAL_URL:-http://localhost:3001/not-used}"
        "${MIGRATION_IMAGE}" sh -c "yarn ${MIGRATION_CMD}"
